// <auto-generated />
using System;
using DilProjesi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DilProjesi.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200904134044_ilk-migration")]
    partial class ilkmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DilProjesi.DOMAIN.Entities.Dil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Anahtar")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Dil");
                });

            modelBuilder.Entity("DilProjesi.DOMAIN.Entities.Proje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Proje");
                });

            modelBuilder.Entity("DilProjesi.DOMAIN.Entities.Sozcuk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("FkProjeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FkProjeId");

                    b.ToTable("Sozcuk");
                });

            modelBuilder.Entity("DilProjesi.DOMAIN.Entities.Tercume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ceviri")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("FkDilId")
                        .HasColumnType("int");

                    b.Property<int>("FkSozcukId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FkDilId");

                    b.HasIndex("FkSozcukId");

                    b.ToTable("Tercume");
                });

            modelBuilder.Entity("DilProjesi.DOMAIN.Entities.Sozcuk", b =>
                {
                    b.HasOne("DilProjesi.DOMAIN.Entities.Proje", "Proje")
                        .WithMany("Sozcukler")
                        .HasForeignKey("FkProjeId");
                });

            modelBuilder.Entity("DilProjesi.DOMAIN.Entities.Tercume", b =>
                {
                    b.HasOne("DilProjesi.DOMAIN.Entities.Dil", "Dil")
                        .WithMany("Tercumeler")
                        .HasForeignKey("FkDilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilProjesi.DOMAIN.Entities.Sozcuk", "Sozcuk")
                        .WithMany("Tercumeler")
                        .HasForeignKey("FkSozcukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
